# break语句在while循环和for循环中都可以使用，一般放在if选择结构中，一旦break语句被执行，将使得整个循环提前结束。
# continue语句的作用是终止当前循环，并忽略continue之后的语句，然后回到循环的顶端，提前进入下一次循环。
# 除非break语句让代码更简单或更清晰，否则不要轻易使用。

# for 循环也有 else 子句：该 else 子句在循环正常完成时执行，这意味着循环没有遇到任何 break 语句。
# 常见的状况是运行一个循环并搜索一个项，如果找到该项目，我们使用 break 跳出循环。有两种情况可能会导致循环结束。第一个是找到该项并 break ，第二种情况是循环自然结束。
# 可能想知道其中的哪一个是循环完成的原因，一种方法是设置一个标志，然后在循环结束时检查它，另一个是使用该 else 子句。


# 下面的代码用来计算小于100的最大素数，注意break语句和else子句的用法。
for n in range(100, 1, -1):
    for i in range(2, n):
        if n%i == 0:
            break
    else:
        print(n)
        break	
# 97

# 删除上面代码中最后一个break语句，则可以用来输出100以内的所有素数。
for n in range(100, 1, -1):
    for i in range(2, n):
        if n%i == 0:
            break
    else:
        print(n, end=' ')
# 97 89 83 79 73 71 67 61 59 53 47 43 41 37 31 29 23 19 17 13 11 7 5 3 2
